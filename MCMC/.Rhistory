result$trial <- factor(result$trial)
result$value <- as.numeric(result$value)
result
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank())
log_plot
rhat_plot <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point()+ facet_grid(quantity~data, scales='free_y', labeller = label_wrap_gen(multi_line=FALSE)) + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))) +geom_hline(yintercept = 1.1)
rhat_plot <- rhat_plot +  theme(strip.text.x = element_blank()) + scale_y_continuous(
labels = scales::number_format(accuracy = 0.001))
rhat_plot
pdf("two-component-mixture-log-result.pdf", width = 18, height = 20)
grid.arrange(dens_plots ,log_plot, rhat_plot, ncol=1 , layout_matrix = cbind(c(1,2,2,2,3)))
dev.off()
plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_wrap(quantity~data, scales='free_y') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
#plot <- plot +  theme(strip.text.x = element_blank())
plot <- plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank())
plot
dens_plots2 <- ggplot(dens_df, aes(x=x,y = density)) + geom_line() + xlim(c(-20, 20)) + facet_wrap(quantity~data, scales='free',ncol=4) + theme_bw()  + theme(text = element_text(size=20))
dens_plots2 <- dens_plots2 #+  theme(strip.text.x = element_blank())
dens_plots2
rhat_plot2 <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point()+ facet_wrap(quantity~data, scales='free', ncol=4) + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))) + geom_hline(yintercept = 1.1)#+ label_value(labels, multi_line = TRUE)
#rhat_plot2 <- rhat_plot2   +  theme(strip.text.y = element_blank() ,plot.margin = unit(c(ub, rl, ub, rl), "cm") )
rhat_plot2
pdf("two-component-mixture-result.pdf", width = 18, height = 20)
grid.arrange(
dens_plots2+ scale_y_continuous(labels = scales::number_format(accuracy = 0.001), limits = c(0,0.15)),
plot,
rhat_plot2 + theme(panel.spacing = unit(1, "lines")),
ncol=1 , layout_matrix = cbind(c(1,2,2,2,3)))
dev.off()
# loading all dependencies
require(rjags)
require(coda)
require(here)
require(rstan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
load.module("mix")
NT <- 5 # number of trials
set.seed(123)
# some setup
iterations <- 3000
burnin <- floor(iterations/2)
chains <- 3
parameters = c("mu", "sigma", "mixing_p","z")
# functions to restrict the set of samplers that jags can use
all_sampler <- function(){
set.factory("mix::LDA", TRUE, type="sampler")
set.factory("mix::DirichletCat", TRUE, type="sampler")
set.factory("bugs::BinomSlice", TRUE, type="sampler")
set.factory("bugs::RW1", TRUE, type="sampler")
set.factory("bugs::Censored", TRUE, type="sampler")
set.factory("bugs::Sum", TRUE, type="sampler")
set.factory("bugs::DSum", TRUE, type="sampler")
set.factory("bugs::Conjugate", TRUE, type="sampler")
set.factory("bugs::Dirichlet", TRUE, type="sampler")
set.factory("zbugs::MNormal", TRUE, type="sampler")
set.factory("base::Finite", TRUE, type="sampler")
set.factory("base::Slice", TRUE, type="sampler")
set.factory("mix::TemperedMix", TRUE, type="sampler")
}
res_sampler <- function(){
set.factory("mix::LDA", FALSE, type="sampler")
set.factory("mix::DirichletCat", FALSE, type="sampler")
set.factory("bugs::BinomSlice", FALSE, type="sampler")
set.factory("bugs::RW1", FALSE, type="sampler")
set.factory("bugs::Censored", FALSE, type="sampler")
set.factory("bugs::Sum", FALSE, type="sampler")
set.factory("bugs::DSum", FALSE, type="sampler")
set.factory("bugs::Conjugate", FALSE, type="sampler")
set.factory("bugs::Dirichlet", TRUE, type="sampler")
set.factory("bugs::MNormal", FALSE, type="sampler")
set.factory("base::Finite", FALSE, type="sampler")
set.factory("base::Slice", TRUE, type="sampler")
set.factory("mix::TemperedMix", FALSE, type="sampler")
}
# parameters and functions for generating data
mixing_equal <- c(1/3, 1/3, 1/3)
mixing_diff <- c(0.5, 0.3, 0.2)
mixing_pair <- c(0.5, 0.3, 0.2)
prec = c(1/4, 1/4, 1/4)
sigma = sqrt(1/prec)
mu_equal_big <- c(-10.5, 0, 10.5)
mu_equal_small <- c(-6, 0 , 6)
mu_diff_big <- c(-9, -3, 12 )
mu_diff_small <- c(-4.5, 0 , 6.5)
mixing_p1 <- mixing_p2 <- mixing_p3 <- mixing_p4 <- mixing_equal
mixing_p5 <- mixing_p6 <- mixing_p7 <- mixing_p8 <- mixing_diff
mu1 <- mu5 <- mu_equal_big
mu2 <- mu6 <- mu_equal_small
mu3 <- mu7 <- mu_diff_big
mu4 <- mu8 <- mu_diff_small
N <- 200
library(LaplacesDemon)
data_generation <- function(datanum){
I = numeric(N)
x = numeric(N)
I = rcat(n=N, eval(as.name(paste("mixing_p", datanum, sep=""))))
for(i in 1:N){
x[i] = rnorm(n=1,
mean=eval(as.name(paste("mu", datanum, sep="")))[I[i]],
sd=sigma)
}
return(x)
}
# running jags and stan for data 1,2,3,4 and record the quantities of
# interest
# quantities of interest:
# *time/min ess
# * min ess
# * time
# * Rhat
# the quantities will be stored in a dataframe with the following columns
# * model
# * model type
# * data
# * quantity
# * trial
# * value
result <- data.frame()
stan_mod_list <- list()
jags_mod_list <- list()
jags_full_restricted_mod_list <- list()
# start running jags and stan
for (datanum in 1:8){
for (t in 1:NT){
data <- data_generation(datanum)
y <- data
N <- length(data)
data_jags <- data_stan <- list(N=N, y=y)
# for stan
# record stan computation time
time <- system.time(model_fit <-
suppressMessages(
stan(file = here("Models","three-componentModellnorm.stan"),
data = data_stan, iter=iterations,
chain=chains, warmup=burnin)))["elapsed"]
result <- rbind(result, c("stan", NA, datanum, "Computation Time", t, time))
# record stan model
stan_mod_list[[t]] <- model_fit
# record stan min ess
ess <- min(summary(model_fit)$summary[,"n_eff"][0:9])
result <- rbind(result, c("stan",NA,  datanum, "Min Effective Sample Size", t, ess))
# record stan timeper min ess
timeperess <-  time/ess
result <- rbind(result, c("stan", NA,datanum,  "Time per min Effective Sample", t, timeperess))
# record stan rhat
temp <- summary(model_fit)
rhat <- max(temp$summary[,"Rhat"][1:9])
result <- rbind(result, c("stan",NA, datanum,  "Rhat", t, rhat))
# unrestricted set of samplers for jags
all_sampler()
for(j in 1:3){
model <- paste("three-componentModel",j,"lnorm.txt",sep="")
# for jags-full
# computation time
t1 <- system.time(model.fit <-
jags.model(file =here("Models",model),
data=data_jags,
n.chains=chains))["elapsed"]
t2 <- system.time(model.samples <-
coda.samples(model.fit, parameters,
n.iter=iterations))["elapsed"]
time <- t1 + t2
result <- rbind(result, c("jags", j, datanum,"Computation Time", t, time))
# model
jags_mod_list[[t]] <- model.samples
# ess
ess <- min(effectiveSize(model.samples)[0:9])
result <- rbind(result, c("jags",j, datanum,"Min Effective Sample Size", t, ess))
# time per ess
timeperess <- time/ess
result <- rbind(result, c("jags",j, datanum,"Time per min Effective Sample", t, timeperess))
#rhat
disc <- gelman.diag(model.samples, multivariate = FALSE)
rhat <- max(disc$psrf[1:9,"Upper C.I."])
result <- rbind(result, c("jags",j,datanum, "Rhat", t, rhat))
}
# restricted set of samplers for jags
res_sampler()
model <- paste("three-componentModel1lnorm.txt")
# computation time
t1 <- system.time(model.fit <-
jags.model(file =here("Models",model),
data=data_jags,
n.chains=chains))["elapsed"]
t2 <-  system.time(model.samples <-
coda.samples(model.fit, parameters,
n.iter=iterations))["elapsed"]
time <- t1 + t2
result <- rbind(result, c("jags-full-restricted", NA,datanum, "Computation Time", t, time))
# model
jags_full_restricted_mod_list[[t]] <- model.samples
# ess
ess <- min(effectiveSize(model.samples)[0:9])
result <- rbind(result, c("jags-full-restricted",NA, datanum,"Min Effective Sample Size", t, ess))
# time per ess
timeperess <- time/ess
result <- rbind(result, c("jags-full-restricted",NA, datanum,"Time per min Effective Sample", t, timeperess))
#rhat
disc <- gelman.diag(model.samples, multivariate = FALSE)
rhat <- max(disc$psrf[1:9,"Upper C.I."])
result <- rbind(result, c("jags-full-restricted",NA, datanum,"Rhat", t, rhat))
}
}
# cleaning up model name
colnames(result) <- c("model","type","data","quantity","trial", "value")
mod_name <- result$model
mod_name[result$model == "jags" & result$type == 1] <- "jags-full"
mod_name[result$model == "jags" & result$type == 2] <- "jags-marg-inbuilt"
mod_name[result$model == "jags" & result$type == 3] <- "jags-marg"
result$model <- mod_name
result <- subset(result, select = -c(type))
saveRDS(result, file = paste(here("Results"), "/three-component-result.rds", sep=""))
library(egg)
library(dplyr)
library(tidyverse)
library(scales)
addline_format <- function(x,...){
gsub('-','-\n',x)
}
sample.pts <- seq(-20,20, by=0.1)
mixing_equal <- c(1/3, 1/3, 1/3)
mixing_diff <- c(0.5, 0.3, 0.2)
mixing_pair <- c(0.5, 0.3, 0.2)
prec = c(1/4, 1/4, 1/4)
sigma = sqrt(1/prec)
mu_equal_big <- c(-10.5, 0, 10.5)
mu_equal_small <- c(-6, 0 , 6)
mu_diff_big <- c(-9, -3, 12 )
mu_diff_small <- c(-4.5, 0 , 6.5)
mixing_p1 <- mixing_p2 <- mixing_p3 <- mixing_p4 <- mixing_equal
mixing_p5 <- mixing_p6 <- mixing_p7 <- mixing_p8 <- mixing_diff
mu1 <- mu5 <- mu_equal_big
mu2 <- mu6 <- mu_equal_small
mu3 <- mu7 <- mu_diff_big
mu4 <- mu8 <- mu_diff_small
dens_f <- function(x){
val <- eval(as.name(paste("mixing_p", x, sep="")))[1]*
dnorm(sample.pts,
mean=eval(as.name(paste("mu", x, sep="")))[1],
sd = sigma) +
eval(as.name(paste("mixing_p", x, sep="")))[2]*
dnorm(sample.pts,
mean=eval(as.name(paste("mu", x, sep="")))[2],
sd = sigma) +
eval(as.name(paste("mixing_p", x, sep="")))[3]*
dnorm(sample.pts,
mean=eval(as.name(paste("mu", x, sep="")))[3],
sd = sigma)
return(val)
}
dens <- c(1,5,7,2,4,3,6,8)
dens_list <- lapply(dens, dens_f)
dens_df <- data.frame()
for(i in 1:8){
dens_df <- rbind(dens_df, data.frame("density" = dens_list[[i]], "data"=rep(paste("Data", i), length(sample.pts)), "x"=sample.pts))
}
dens_df$data <- factor(dens_df$data, levels = c("Data 1", "Data 2", "Data 3", "Data 4","Data 5", "Data 6", "Data 7", "Data 8"))
dens_df$quantity <- factor("Density")
dens_plots <- ggplot(dens_df, aes(x=x,y = density)) + geom_line() + xlim(c(-20, 20)) + facet_grid(quantity~data, scales='free_y', labeller = label_wrap_gen(multi_line=FALSE)) + theme_bw()  + theme(text = element_text(size=20))
dens_plots <- dens_plots #+  theme(strip.text.x = element_blank())
dens_plots
result <- readRDS(here("Results","three-component-result.rds"))
result$model <- factor(result$model, levels = c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))
result$data <- factor(result$data, levels = format(c(1,5,7,2,4,3,6,8)), labels = c("Data 1","Data 2","Data 3","Data 4","Data 5","Data 6","Data 7","Data 8"))
result$quantity <- (result$quantity)
result$quantity <- factor(result$quantity, levels = c(("Time per min Effective Sample"), "Computation Time",( "Min Effective Sample Size"), "Rhat"))
result$trial <- factor(result$trial)
result$value <- as.numeric(result$value)
result
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank())
log_plot
rhat_plot <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point()+ facet_grid(quantity~data, scales='free_y', labeller = label_wrap_gen(multi_line=FALSE)) + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))) +geom_hline(yintercept = 1.1)
rhat_plot <- rhat_plot +  theme(strip.text.x = element_blank()) + scale_y_continuous(
labels = scales::number_format(accuracy = 0.01))
rhat_plot
pdf("three-component-mixture-log-result.pdf", width = 36, height = 20)
grid.arrange(dens_plots ,log_plot, rhat_plot, ncol=1 , layout_matrix = cbind(c(1,2,2,2,3)))
dev.off()
plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_wrap(quantity~data, scales='free_y', ncol=8) + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
#plot <- plot +  theme(strip.text.x = element_blank())
plot <- plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank())
plot
dens_plots2 <- ggplot(dens_df, aes(x=x,y = density)) + geom_line() + xlim(c(-20, 20)) + facet_wrap(quantity~data, scales='free',ncol=8) + theme_bw()  + theme(text = element_text(size=20))
dens_plots2 <- dens_plots2 #+  theme(strip.text.x = element_blank())
dens_plots2
rhat_plot2 <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point()+ facet_wrap(quantity~data, scales='free', ncol=8) + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))) + geom_hline(yintercept = 1.1)#+ label_value(labels, multi_line = TRUE)
#rhat_plot2 <- rhat_plot2   +  theme(strip.text.y = element_blank() ,plot.margin = unit(c(ub, rl, ub, rl), "cm") )
rhat_plot2
pdf("three-component-mixture-result.pdf", width = 36, height = 20)
grid.arrange(
dens_plots2+ scale_y_continuous(labels = scales::number_format(accuracy = 0.001), limits = c(0,0.11)),
plot,
rhat_plot2 + theme(panel.spacing = unit(1, "lines")),
ncol=1 , layout_matrix = cbind(c(1,2,2,2,3)))
dev.off()
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="red", fill="orange", alpha=0.2)
log_plot
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="gray", alpha=0.2)
log_plot
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="lavenderblush4", alpha=0.2)
log_plot
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="lavenderblush4", alpha=0.8)
log_plot
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="lavenderblush4", alpha=0.5)
log_plot
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="gray", alpha=0.5)
log_plot
library(egg)
library(dplyr)
library(tidyverse)
library(scales)
addline_format <- function(x,...){
gsub('-','-\n',x)
}
sample.pts <- seq(-20,20, by=0.1)
mixing_p1 <- c(0.50, 0.50)
mu1 = c(5, -5)
prec1 = c(1/4, 1/4)
sigma1 = sqrt(1/prec1)
mixing_p2 <- c(0.50, 0.50)
mu2 = c(2.5, -2.5)
prec2 = c(1/4, 1/4)
sigma2 = sqrt(1/prec2)
mixing_p3 <- c(0.70, 0.30)
mu3 = c(5, -5)
prec3 = c(1/4, 1/4)
sigma3 = sqrt(1/prec3)
mixing_p4 <- c(0.70, 0.30)
mu4 = c(2.5, -2.5)
prec4 = c(1/4, 1/4)
sigma4 = sqrt(1/prec4)
dens_f <- function(x){
val <- eval(as.name(paste("mixing_p", x, sep="")))[1]*
dnorm(sample.pts,
mean=eval(as.name(paste("mu", x, sep="")))[1],
sd = eval(as.name(paste("sigma", x, sep="")))[1]) +
eval(as.name(paste("mixing_p", x, sep="")))[2]*
dnorm(sample.pts,
mean=eval(as.name(paste("mu", x, sep="")))[2],
sd = eval(as.name(paste("sigma", x, sep="")))[2])
return(val)
}
dens <- c(1,3,2,4)
dens_list <- lapply(dens, dens_f)
dens_df <- data.frame()
for(i in 1:4){
dens_df <- rbind(dens_df, data.frame("density" = dens_list[[i]], "data"=rep(paste("Data", i), length(sample.pts)), "x"=sample.pts))
}
dens_df$data <- factor(dens_df$data, levels = c("Data 1", "Data 2", "Data 3", "Data 4"))
dens_df$quantity <- factor("Density")
dens_plots <- ggplot(dens_df, aes(x=x,y = density)) + geom_line() + xlim(c(-20, 20)) + facet_grid(quantity~data, scales='free_y', labeller = label_wrap_gen(multi_line=FALSE)) + theme_bw()  + theme(text = element_text(size=20))
dens_plots <- dens_plots #+  theme(strip.text.x = element_blank())
dens_plots
result <- readRDS(here("Results","two-component-result.rds"))
result$model <- factor(result$model, levels = c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))
result$data <- factor(result$data, levels = c("1","3","2","4"), labels = c("Data 1","Data 2","Data 3","Data 4"))
result$quantity <- (result$quantity)
result$quantity <- factor(result$quantity, levels = c(("Time per min Effective Sample"), "Computation Time",( "Min Effective Sample Size"), "Rhat"))
result$trial <- factor(result$trial)
result$value <- as.numeric(result$value)
result
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="gray", alpha=0.5)
log_plot
rhat_plot <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point()+ facet_grid(quantity~data, scales='free_y', labeller = label_wrap_gen(multi_line=FALSE)) + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))) +geom_hline(yintercept = 1.1)
rhat_plot <- rhat_plot +  theme(strip.text.x = element_blank()) + scale_y_continuous(
labels = scales::number_format(accuracy = 0.001))
rhat_plot
pdf("two-component-mixture-log-result.pdf", width = 18, height = 20)
grid.arrange(dens_plots ,log_plot, rhat_plot, ncol=1 , layout_matrix = cbind(c(1,2,2,2,3)))
dev.off()
plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_wrap(quantity~data, scales='free_y') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
#plot <- plot +  theme(strip.text.x = element_blank())
plot <- plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="gray", alpha=0.5)
plot
dens_plots2 <- ggplot(dens_df, aes(x=x,y = density)) + geom_line() + xlim(c(-20, 20)) + facet_wrap(quantity~data, scales='free',ncol=4) + theme_bw()  + theme(text = element_text(size=20))
dens_plots2 <- dens_plots2 #+  theme(strip.text.x = element_blank())
dens_plots2
rhat_plot2 <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point()+ facet_wrap(quantity~data, scales='free', ncol=4) + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))) + geom_hline(yintercept = 1.1)#+ label_value(labels, multi_line = TRUE)
#rhat_plot2 <- rhat_plot2   +  theme(strip.text.y = element_blank() ,plot.margin = unit(c(ub, rl, ub, rl), "cm") )
rhat_plot2
pdf("two-component-mixture-result.pdf", width = 18, height = 20)
grid.arrange(
dens_plots2+ scale_y_continuous(labels = scales::number_format(accuracy = 0.001), limits = c(0,0.15)),
plot,
rhat_plot2 + theme(panel.spacing = unit(1, "lines")),
ncol=1 , layout_matrix = cbind(c(1,2,2,2,3)))
dev.off()
library(egg)
library(dplyr)
library(tidyverse)
library(here)
# helper function for string wrapping
swr <- function(string, nwrap=20) {
paste(strwrap(string, width=nwrap), collapse="\n")
}
swr <- Vectorize(swr)
result <- readRDS(here("Results","Dawid-Skene-result.rds"))
result$model <- factor(result$model, levels = c("stan", "jags-full", "jags-marg"))
result$quantity <- swr(result$quantity)
result$quantity <- factor(result$quantity, levels = c(swr("Time per min Effective Sample"), "Computation Time",swr( "Min Effective Sample Size"), "Rhat"))
result$trial <- factor(result$trial)
result$value <- as.numeric(result$value)
result
plot1 <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity ~., scales='free') + theme_bw() + theme(text = element_text(size=20)) +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="gray", alpha=0.5) #+ scale_fill_brewer(palette = "Set3")
plot2 <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point() + theme_bw() + facet_grid(quantity ~., scales='free') + theme(text = element_text(size=20))+geom_hline(yintercept = 1.1)#+ scale_color_brewer(palette="Set3") +geom_hline(yintercept = 1.1)
pdf("Dawid-Skene-anesthesia-result.pdf", width = 8, height = 12)
grid.arrange(plot1, plot2, ncol=1 , layout_matrix = cbind(c(1,1,1,2)))
dev.off()
library(egg)
library(dplyr)
library(tidyverse)
library(scales)
addline_format <- function(x,...){
gsub('-','-\n',x)
}
sample.pts <- seq(-20,20, by=0.1)
mixing_equal <- c(1/3, 1/3, 1/3)
mixing_diff <- c(0.5, 0.3, 0.2)
mixing_pair <- c(0.5, 0.3, 0.2)
prec = c(1/4, 1/4, 1/4)
sigma = sqrt(1/prec)
mu_equal_big <- c(-10.5, 0, 10.5)
mu_equal_small <- c(-6, 0 , 6)
mu_diff_big <- c(-9, -3, 12 )
mu_diff_small <- c(-4.5, 0 , 6.5)
mixing_p1 <- mixing_p2 <- mixing_p3 <- mixing_p4 <- mixing_equal
mixing_p5 <- mixing_p6 <- mixing_p7 <- mixing_p8 <- mixing_diff
mu1 <- mu5 <- mu_equal_big
mu2 <- mu6 <- mu_equal_small
mu3 <- mu7 <- mu_diff_big
mu4 <- mu8 <- mu_diff_small
dens_f <- function(x){
val <- eval(as.name(paste("mixing_p", x, sep="")))[1]*
dnorm(sample.pts,
mean=eval(as.name(paste("mu", x, sep="")))[1],
sd = sigma) +
eval(as.name(paste("mixing_p", x, sep="")))[2]*
dnorm(sample.pts,
mean=eval(as.name(paste("mu", x, sep="")))[2],
sd = sigma) +
eval(as.name(paste("mixing_p", x, sep="")))[3]*
dnorm(sample.pts,
mean=eval(as.name(paste("mu", x, sep="")))[3],
sd = sigma)
return(val)
}
dens <- c(1,5,7,2,4,3,6,8)
dens_list <- lapply(dens, dens_f)
dens_df <- data.frame()
for(i in 1:8){
dens_df <- rbind(dens_df, data.frame("density" = dens_list[[i]], "data"=rep(paste("Data", i), length(sample.pts)), "x"=sample.pts))
}
dens_df$data <- factor(dens_df$data, levels = c("Data 1", "Data 2", "Data 3", "Data 4","Data 5", "Data 6", "Data 7", "Data 8"))
dens_df$quantity <- factor("Density")
dens_plots <- ggplot(dens_df, aes(x=x,y = density)) + geom_line() + xlim(c(-20, 20)) + facet_grid(quantity~data, scales='free_y', labeller = label_wrap_gen(multi_line=FALSE)) + theme_bw()  + theme(text = element_text(size=20))
dens_plots <- dens_plots #+  theme(strip.text.x = element_blank())
dens_plots
result <- readRDS(here("Results","three-component-result.rds"))
result$model <- factor(result$model, levels = c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))
result$data <- factor(result$data, levels = format(c(1,5,7,2,4,3,6,8)), labels = c("Data 1","Data 2","Data 3","Data 4","Data 5","Data 6","Data 7","Data 8"))
result$quantity <- (result$quantity)
result$quantity <- factor(result$quantity, levels = c(("Time per min Effective Sample"), "Computation Time",( "Min Effective Sample Size"), "Rhat"))
result$trial <- factor(result$trial)
result$value <- as.numeric(result$value)
result
log_plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_grid(quantity~data, scales='free') + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
log_plot <- log_plot +  theme(strip.text.x = element_blank()) + scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x)))
log_plot <- log_plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="gray", alpha=0.5)
log_plot
rhat_plot <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point()+ facet_grid(quantity~data, scales='free_y', labeller = label_wrap_gen(multi_line=FALSE)) + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))) +geom_hline(yintercept = 1.1)
rhat_plot <- rhat_plot +  theme(strip.text.x = element_blank()) + scale_y_continuous(
labels = scales::number_format(accuracy = 0.01))
rhat_plot
pdf("three-component-mixture-log-result.pdf", width = 36, height = 20)
grid.arrange(dens_plots ,log_plot, rhat_plot, ncol=1 , layout_matrix = cbind(c(1,2,2,2,3)))
dev.off()
plot <- ggplot(subset(result, quantity != "Rhat"), aes(x=model, y=value, group=model)) +  geom_boxplot() + facet_wrap(quantity~data, scales='free_y', ncol=8) + theme(strip.placement = "outside") + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted")))
#plot <- plot +  theme(strip.text.x = element_blank())
plot <- plot +scale_x_discrete(labels = NULL) + theme(axis.title.x = element_blank()) + geom_boxplot(color="black", fill="gray", alpha=0.5)
plot
dens_plots2 <- ggplot(dens_df, aes(x=x,y = density)) + geom_line() + xlim(c(-20, 20)) + facet_wrap(quantity~data, scales='free',ncol=8) + theme_bw()  + theme(text = element_text(size=20))
dens_plots2 <- dens_plots2 #+  theme(strip.text.x = element_blank())
dens_plots2
rhat_plot2 <- ggplot(subset(result, quantity == "Rhat"), aes(x=model, y=value, group=model)) +  geom_point()+ facet_wrap(quantity~data, scales='free', ncol=8) + theme_bw() + theme(text = element_text(size=20)) + scale_x_discrete(labels=addline_format(c("stan", "jags-full","jags-marg-inbuilt", "jags-marg", "jags-full-restricted"))) + geom_hline(yintercept = 1.1)#+ label_value(labels, multi_line = TRUE)
#rhat_plot2 <- rhat_plot2   +  theme(strip.text.y = element_blank() ,plot.margin = unit(c(ub, rl, ub, rl), "cm") )
rhat_plot2
pdf("three-component-mixture-result.pdf", width = 36, height = 20)
grid.arrange(
dens_plots2+ scale_y_continuous(labels = scales::number_format(accuracy = 0.001), limits = c(0,0.11)),
plot,
rhat_plot2 + theme(panel.spacing = unit(1, "lines")),
ncol=1 , layout_matrix = cbind(c(1,2,2,2,3)))
dev.off()
